# _*_ coding:utf-8 _*_
"""
written by Misty;KISA

This Script followed GNU General Public License 3.0.
So Anyone can modify this script for their own system environments.
Use useful for you Unix system management skill. :P

this script published with GPL3 ,
you Can modify this program for your own system environments.
"""

# major lib define/importment
import os,sys
import os.path
import platform
from datetime import datetime


# define major variables
Platform_name = ""
Platform_type = ""
Platform_print = ""
time_logging-1 = datetime.now() # Script start time.
time_logging-2 = ""

# Unix Log directory DB define. (var/log)
    UULR_DB = [
        "/var/log/messages",
        "/var/log/dmesg",
        "/var/log/auth.log",
        "/var/log/auth.log",
        "/var/log/boot.log",
        "/var/log/daemon.log",
        "/var/log/dpkg.log",
        "/var/log/kern.log",
        "/var/log/lastlog",
        "/var/log/maillog", 
        "/var/log/mail.log",
        "/var/log/maillog",
        "/var/log/user.log",
        "/var/log/Xorg.x.log",
        "/var/log/alternatives.log",
        /var/log/btmp",
        "/var/log/cups",
        "/var/log/anaconda.log",
        "/var/log/yum.log",
        "/var/log/cron",
        "/var/log/secure",
        "/var/log/wtmp", 
        "/var/log/utmp",
        "/var/log/wtmp", "/var/log/utmp",
        "/var/log/faillog",
        "/var/log/lastlog", 
        "/var/log/messages", 
        "/var/log/warn", 
        "/var/log/wtmp", 
        "/var/log/poplog", 
        "/var/log/qmail", 
        "/var/log/smtpd", 
        "/var/log/telnetd", 
        "/var/log/secure", 
        "/var/log/auth", 
        "/var/log/auth.log", 
        "/var/log/cups/access_log", 
        "/var/log/cups/error_log", 
        "/var/log/thttpd_log", 
        "/var/log/spooler", 
        "/var/spool/tmp", 
        "/var/spool/errors", 
        "/var/spool/locks", 
        "/var/log/nctfpd.errs", 
        "/var/log/acct", 
        "/var/apache/log", 
        "/var/apache/logs", 
        "/usr/local/apache/log", 
        "/usr/local/apache/logs", 
        "/usr/local/www/logs/thttpd_log", 
        "/var/log/news", 
        "/var/log/news/news", 
        "/var/log/news.all", 
        "/var/log/news/news.all", 
        "/var/log/news/news.crit", 
        "/var/log/news/news.err", 
        "/var/log/news/news.notice", 
        "/var/log/news/suck.err", 
        "/var/log/news/suck.notice", 
        "/var/log/xferlog", 
        "/var/log/proftpd/xferlog.legacy", 
        "/var/log/proftpd.xferlog", 
        "/var/log/proftpd.access_log", 
        "/var/log/httpd/error_log", 
        "/var/log/httpsd/ssl_log", 
        "/var/log/httpsd/ssl.access_log", 
        "/var/adm", 
        "/var/run/utmp", 
        "/etc/wtmp", 
        "/etc/utmp", 
        "/etc/mail/access", 
        "/var/log/mail/info.log", 
        "/var/log/mail/errors.log", 
        "/var/log/httpd/*_log", 
        "/var/log/ncftpd/misclog.txt", 
        "/var/account/pacct", 
        "/var/log/snort", 
        "/var/log/bandwidth", 
        "/var/log/explanations", 
        "/var/log/syslog", 
        "/var/log/user.log", 
        "/var/log/daemons/info.log", 
        "/var/log/daemons/warnings.log", 
        "/var/log/daemons/errors.log", 
        "/etc/httpd/logs/error_log", 
        "/etc/httpd/logs/*_log", 
        "/var/log/mysqld/mysqld.log"
        "/root/.ksh_history", 
        "/root/.bash_history", 
        "/root/.sh_history", 
        "/root/.history", 
        "/root/*_history", 
        "/root/.login", 
        "/root/.logout", 
        "/root/.bash_logut", 
        "/root/.Xauthority"
    ]

    # store checked log files
    ChDB = []

    # DB source :  https://sisiblog.tistory.com/24




# Manufacture/print OS type and version for script executable.

# Manufacture
def Main():

    

    # Start UI define.
    print "/---------------------------------------------------/"
    print "/            Universal Unix Log Remover             /"
    print "/              GNU GPL OpenSource !! :P             /"
    print "/                                                   /"
    print "/  Public! Public! Public! Public! Public! :P       /"
    print "/----------------   Made By Misty   ----------------/"
    print "/---------------------------------------------------/"




    print "[!] ","Start the UULR"
    print "[*] ", "Operating system check.../"
    
    
    # Check the user'system env & platform due to remove all logs.
    # Check the OS platform to use this script for Log clear.
    Platform_name = platform.platform()
    # Check the OS platform Type for show what os is you using.
    Platform_type = platform.system()
    
    # Check the OS version and start script or shutdown script.
    if Platform_type == Windows:
        print "[-] ", "Oops! You using Windows OS! Try again with Linux system!!!"
        print "[!] ", "Try Again with Linux/Unix system!!"
        sys.exit()
    else:
        print "[*] ", "You are using", Platform_type, "Now! Good Job Let's see more fun...!"
        print "[+] ", "Operating system check complete! :P"
        
    
    # execute remove logic...
    print "[!] ", "Are you sure you want to clear your logs and shell histories?"
    answer = raw_input("y/n: ")
    
    if answer.lower() == 'y':
        for log in logs:
            if os.path.isfile(log):
                print "[***] Cleaning " +log
                os.remove(log)
                print "[+] Done cleaning.."
                
        time.sleep(1)
        print "\n[***] Done sweeping \m/"
    
    if answer.low() == 'n':
        print "See You Later..!XD"
        sys.exit()
        
    else:
        sys.exit()
    
if __name__ == "__main__":
    if not os.geteuid() == 0:
        sys.exit("Please run this script as root!")

    else:







